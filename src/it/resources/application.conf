
kamon {
   metric.filters {
      akka-actor {
         includes = ["test-system/user/simple-consumer/consumer-worker", "test-system/user/simple-consumer/consumer-worker*/checkpoint-worker*"]
         excludes = ["test-system/system/**"]
      }

      akka-dispatcher {
         includes = ["test-system/akka.actor.default-dispatcher", "test-system/kinesis.akka.default-dispatcher"]
      }

      trace {
         includes = [ "**" ]
         excludes = []
      }

      #akka-router {
      #   includes = [ "test-system/user/some-router" ]
      #}
   }

   statsd {
      # Hostname and port in which your StatsD is running. Remember that StatsD packets are sent using UDP and
      # setting unreachable hosts and/or not open ports wont be warned by the Kamon, your data wont go anywhere.
      hostname = "127.0.0.1"
      port = 8125

      # Interval between metrics data flushes to StatsD. It's value must be equal or greater than the
      # kamon.metrics.tick-interval setting.
      flush-interval = 1 second

      # Max packet size for UDP metrics data sent to StatsD.
      max-packet-size = 1024 bytes

      # Subscription patterns used to select which metrics will be pushed to StatsD. Note that first, metrics
      # collection for your desired entities must be activated under the kamon.metrics.filters settings.
      includes {
         actor = ["*"]
         trace = ["*"]
         dispatcher = ["*"]
      }

      simple-metric-key-generator {
         # Application prefix for all metrics pushed to StatsD. The default namespacing scheme for metrics follows
         # this pattern:
         #    application.host.entity.entity-name.metric-name
         application = "kinesis-test"
      }
   }

   # modules can be disabled at startup using yes/no arguments.
   modules {
      kamon-log-reporter.auto-start = no
      kamon-system-metrics.auto-start = no
      kamon-statsd.auto-start = no
      kamon-akka.auto-start = no
   }
}
